#  Copyright (C) 2018-2019, TIBCO Software Inc.
#  
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are met:
#  
#  1. Redistributions of source code must retain the above copyright notice,
#     this list of conditions and the following disclaimer.
#  
#  2. Redistributions in binary form must reproduce the above copyright notice,
#     this list of conditions and the following disclaimer in the documentation
#     and/or other materials provided with the distribution.
#  
#  3. Neither the name of the copyright holder nor the names of its contributors
#     may be used to endorse or promote products derived from this software
#     without specific prior written permission.
#  
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#  POSSIBILITY OF SUCH DAMAGE.

---
- name: AWS -- Terminate EC2 instance(s)
  hosts: localhost
  gather_facts: false

  tasks:
    - name: include aws config
      include_vars: "../../../../target/classes/global_vars/aws_config.yml"

    - name: Assume an existing role
      sts_assume_role:
        role_arn: "{{ role_arn }}"
        role_session_name: "{{ role_session_name }}"
        region: "{{ region }}"
      register: assumed_role
      when: sts

    - name: Gather EC2 facts
      ec2_instance_facts:
        aws_access_key: "{{ assumed_role.sts_creds.access_key | default(omit) }}"
        aws_secret_key: "{{ assumed_role.sts_creds.secret_key | default(omit) }}"
        security_token: "{{ assumed_role.sts_creds.session_token | default(omit) }}"

        region: "{{ region }}"
        filters:
          "tag:Name": "ef-2node-awsec2-app"
      register: ec2

    - name: EC2 instance(s) to be removed
      debug: var=ec2.instances

    - name: Terminate EC2 instance(s)
      ec2:
        aws_access_key: "{{ assumed_role.sts_creds.access_key | default(omit) }}"
        aws_secret_key: "{{ assumed_role.sts_creds.secret_key | default(omit) }}"
        security_token: "{{ assumed_role.sts_creds.session_token | default(omit) }}"

        instance_ids: "{{ item.instance_id }}"
        region: "{{ region }}"
        state: absent
      with_items: "{{ ec2.instances }}"
